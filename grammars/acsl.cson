# If this is your first time writing a language grammar, check out:
#   - http://manual.macromates.com/en/language_grammars

'scopeName': 'source.acsl'
'name': 'ACSL'
'injectionSelector': 'L:source.c'
'patterns': [
  {
    'begin': '/\\*@'
    'end': '\\*/'
    'name': 'block.acsl'
    'patterns': [
      {
        'match': '(\\\\from|\\b(assert|assigns|assumes|allocates|axiom|axiomatic|behavior
        |behaviors|breaks|case|char|complete|continues|decreases|disjoint|double
        |else|ensures|enum|exits|float|for|frees|if|inductive|int|integer
        |invariant|global|label|lemma|logic|long|loop|pragma|predicate|reads
        |real|requires|returns|short|signed|sizeof|slice|impact|struct
        |terminates|type|union|unsigned|variant|void))\\b'
        'name': 'keyword.acsl'
      }
      {
        'match': '//\\S*\\n'
        'name': 'comment.line.double-slash.acsl'
      }
      {
        'match': '\\\\\\b(true|false|result|nothing)\\b'
        'name': 'constant.boolean.acsl'
      }
      {
        'match': '\\b((0(x|X)[0-9a-fA-F]([0-9a-fA-F\']*[0-9a-fA-F])?)|(0(b|B)[01]([01\']*[01])?)|(([0-9]([0-9\']*[0-9])?\\.?[0-9]*([0-9\']*[0-9])?)|(\\.[0-9]([0-9\']*[0-9])?))((e|E)(\\+|-)?[0-9]([0-9\']*[0-9])?)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b'
        'name': 'constant.numeric.acsl'
      }
      {
        'match': '(\\+|-|\\*|/|%|<<|>>|==|!=|<=|>=|>|<|&&|\\|\\||&|-->|<-->|\\^|\\^\\^|\\.\\.)'
        'name': 'keyword.operator.binary.acsl'
      }
      {
        'match': '(\\+|-|!|~|\\*|&)'
        'name': 'keyword.operator.unary.acsl'
      }
      {
        'match': '\\\\\\b(valid|forall|exists|old)\\b'
        'name': 'support.function.acsl'
      }
      {
        'match': ';'
        'name': 'punctuation.terminator.statement.acsl'
      }
      {
        'match': '\\b\\w+(?=\\((\\w+\\s*,?\\s*)*\\))'
        'name': 'entity.name.function.acsl'
      }
      {
        'match': '\\b\\w+(?=\\{(\\w+\\s*,?\\s*)*\\}(\\((\\w+\\s*,?\\s*)*\\))?)'
        'name': 'entity.name.function.acsl'
      }
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.acsl'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.acsl'
        'name': 'string.quoted.double.include.ascl'
      }
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.acsl'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.acsl'
        'name': 'string.quoted.single.acsl'
      }
    ]
  }
]
